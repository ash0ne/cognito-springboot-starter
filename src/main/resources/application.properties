spring.application.name=cognito-springboot-starter

# Cognito OAuth config
spring.security.oauth2.client.registration.cognito.client-id=<cognito_client_id>
spring.security.oauth2.client.registration.cognito.redirect-uri=http://localhost:8080/login/oauth2/code/cognito
spring.security.oauth2.client.registration.cognito.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.cognito.scope=openid,email
spring.security.oauth2.client.registration.cognito.client-authentication-method=none
spring.security.oauth2.client.provider.cognito.authorization-uri=https://<cognito-app-name>.auth.<region>.amazoncognito.com/oauth2/authorize
spring.security.oauth2.client.provider.cognito.token-uri=https://<cognito-app-name>.auth.<region>.amazoncognito.com/oauth2/token
spring.security.oauth2.client.provider.cognito.user-info-uri=https://<cognito-app-name>.auth.<region>.amazoncognito.com/oauth2/userInfo
spring.security.oauth2.client.provider.cognito.jwk-set-uri=https://cognito-idp.<region>.amazonaws.com/<user_pool_id>/.well-known/jwks.json
spring.security.oauth2.client.provider.cognito.user-name-attribute=username
cognito.issuer-uri=https://cognito-idp.<region>.amazonaws.com/<user_pool_id>
cognito.provider=cognito
cognito.roles-attribute=cognito:groups
cognito.client-behaviour-enabled=false

# DataSource and JPA / Hibernate configuration - Defaults to the local-env-setup
spring.datasource.url=jdbc:postgresql://localhost:5432/cognito-starter?currentSchema=cognito_starter
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Cors configuration. Change it to be stricter if the app is directly exposed to users
cors.origins=*
cors.methods=*
cors.headers=*
